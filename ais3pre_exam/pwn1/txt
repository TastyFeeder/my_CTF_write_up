
pwn1.bin：     檔案格式 elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 0c 39             	add    %cl,(%ecx,%edi,1)
 804819a:	13 df                	adc    %edi,%ebx
 804819c:	b4 7e                	mov    $0x7e,%ah
 804819e:	36 35 05 c3 6f 6e    	ss xor $0x6e6fc305,%eax
 80481a4:	84 3d a2 41 a8 8d    	test   %bh,0x8da841a2
 80481aa:	01 ef                	add    %ebp,%edi

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    (%eax),%eax
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	08 00                	or     %al,(%eax)
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 80       	add    $0x80000000,%eax
 80481bd:	2b 00                	sub    (%eax),%eax
 80481bf:	20 08                	and    %cl,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 09                	add    %cl,(%ecx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00 00                	add    %al,(%eax)
 80481c9:	00 00                	add    %al,(%eax)
 80481cb:	00 29                	add    %ch,(%ecx)
 80481cd:	1d 8c 1c ac 4b       	sbb    $0x4bac1c8c,%eax
 80481d2:	e3 c0                	jecxz  8048194 <_init-0x230>
 80481d4:	67 55                	addr16 push %ebp
 80481d6:	61                   	popa   
 80481d7:	10                   	.byte 0x10

Disassembly of section .dynsym:

080481d8 <.dynsym>:
	...
 80481e8:	40                   	inc    %eax
	...
 80481f1:	00 00                	add    %al,(%eax)
 80481f3:	00 12                	add    %dl,(%edx)
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 29                	add    %ch,(%ecx)
	...
 8048201:	00 00                	add    %al,(%eax)
 8048203:	00 12                	add    %dl,(%edx)
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 4e 00             	add    %cl,0x0(%esi)
	...
 8048212:	00 00                	add    %al,(%eax)
 8048214:	12 00                	adc    (%eax),%al
 8048216:	00 00                	add    %al,(%eax)
 8048218:	6f                   	outsl  %ds:(%esi),(%dx)
	...
 8048221:	00 00                	add    %al,(%eax)
 8048223:	00 20                	add    %ah,(%eax)
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 5d 00             	add    %bl,0x0(%ebp)
	...
 8048232:	00 00                	add    %al,(%eax)
 8048234:	12 00                	adc    (%eax),%al
 8048236:	00 00                	add    %al,(%eax)
 8048238:	55                   	push   %ebp
	...
 8048241:	00 00                	add    %al,(%eax)
 8048243:	00 12                	add    %dl,(%edx)
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 1a                	add    %bl,(%edx)
	...
 8048251:	00 00                	add    %al,(%eax)
 8048253:	00 12                	add    %dl,(%edx)
 8048255:	00 00                	add    %al,(%eax)
 8048257:	00 47 00             	add    %al,0x0(%edi)
 804825a:	00 00                	add    %al,(%eax)
 804825c:	44                   	inc    %esp
 804825d:	a0 04 08 04 00       	mov    0x40804,%al
 8048262:	00 00                	add    %al,(%eax)
 8048264:	11 00                	adc    %eax,(%eax)
 8048266:	1a 00                	sbb    (%eax),%al
 8048268:	0b 00                	or     (%eax),%eax
 804826a:	00 00                	add    %al,(%eax)
 804826c:	2c 87                	sub    $0x87,%al
 804826e:	04 08                	add    $0x8,%al
 8048270:	04 00                	add    $0x0,%al
 8048272:	00 00                	add    %al,(%eax)
 8048274:	11 00                	adc    %eax,(%eax)
 8048276:	10 00                	adc    %al,(%eax)
 8048278:	3a 00                	cmp    (%eax),%al
 804827a:	00 00                	add    %al,(%eax)
 804827c:	40                   	inc    %eax
 804827d:	a0 04 08 04 00       	mov    0x40804,%al
 8048282:	00 00                	add    %al,(%eax)
 8048284:	11 00                	adc    %eax,(%eax)
 8048286:	1a 00                	sbb    (%eax),%al

Disassembly of section .dynstr:

08048288 <.dynstr>:
 8048288:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804828c:	63 2e                	arpl   %bp,(%esi)
 804828e:	73 6f                	jae    80482ff <_init-0xc5>
 8048290:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048295:	4f                   	dec    %edi
 8048296:	5f                   	pop    %edi
 8048297:	73 74                	jae    804830d <_init-0xb7>
 8048299:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80482a0:	64 
 80482a1:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482a4:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%ebx),%esi
 80482ab:	73 63                	jae    8048310 <_init-0xb4>
 80482ad:	61                   	popa   
 80482ae:	6e                   	outsb  %ds:(%esi),(%dx)
 80482af:	66 00 5f 5f          	data16 add %bl,0x5f(%edi)
 80482b3:	73 74                	jae    8048329 <_init-0x9b>
 80482b5:	61                   	popa   
 80482b6:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 80482b9:	63 68 6b             	arpl   %bp,0x6b(%eax)
 80482bc:	5f                   	pop    %edi
 80482bd:	66 61                	popaw  
 80482bf:	69 6c 00 73 74 64 69 	imul   $0x6e696474,0x73(%eax,%eax,1),%ebp
 80482c6:	6e 
 80482c7:	00 70 72             	add    %dh,0x72(%eax)
 80482ca:	69 6e 74 66 00 73 74 	imul   $0x74730066,0x74(%esi),%ebp
 80482d1:	64 6f                	outsl  %fs:(%esi),(%dx)
 80482d3:	75 74                	jne    8048349 <_init-0x7b>
 80482d5:	00 73 79             	add    %dh,0x79(%ebx)
 80482d8:	73 74                	jae    804834e <_init-0x76>
 80482da:	65 6d                	gs insl (%dx),%es:(%edi)
 80482dc:	00 73 65             	add    %dh,0x65(%ebx)
 80482df:	74 76                	je     8048357 <_init-0x6d>
 80482e1:	62 75 66             	bound  %esi,0x66(%ebp)
 80482e4:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482e7:	6c                   	insb   (%dx),%es:(%edi)
 80482e8:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80482ef:	72 74                	jb     8048365 <_init-0x5f>
 80482f1:	5f                   	pop    %edi
 80482f2:	6d                   	insl   (%dx),%es:(%edi)
 80482f3:	61                   	popa   
 80482f4:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80482fb:	6f                   	outsl  %ds:(%esi),(%dx)
 80482fc:	6e                   	outsb  %ds:(%esi),(%dx)
 80482fd:	5f                   	pop    %edi
 80482fe:	73 74                	jae    8048374 <_init-0x50>
 8048300:	61                   	popa   
 8048301:	72 74                	jb     8048377 <_init-0x4d>
 8048303:	5f                   	pop    %edi
 8048304:	5f                   	pop    %edi
 8048305:	00 47 4c             	add    %al,0x4c(%edi)
 8048308:	49                   	dec    %ecx
 8048309:	42                   	inc    %edx
 804830a:	43                   	inc    %ebx
 804830b:	5f                   	pop    %edi
 804830c:	32 2e                	xor    (%esi),%ch
 804830e:	37                   	aaa    
 804830f:	00 47 4c             	add    %al,0x4c(%edi)
 8048312:	49                   	dec    %ecx
 8048313:	42                   	inc    %edx
 8048314:	43                   	inc    %ebx
 8048315:	5f                   	pop    %edi
 8048316:	32 2e                	xor    (%esi),%ch
 8048318:	34 00                	xor    $0x0,%al
 804831a:	47                   	inc    %edi
 804831b:	4c                   	dec    %esp
 804831c:	49                   	dec    %ecx
 804831d:	42                   	inc    %edx
 804831e:	43                   	inc    %ebx
 804831f:	5f                   	pop    %edi
 8048320:	32 2e                	xor    (%esi),%ch
 8048322:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048324 <.gnu.version>:
 8048324:	00 00                	add    %al,(%eax)
 8048326:	02 00                	add    (%eax),%al
 8048328:	03 00                	add    (%eax),%eax
 804832a:	02 00                	add    (%eax),%al
 804832c:	00 00                	add    %al,(%eax)
 804832e:	02 00                	add    (%eax),%al
 8048330:	02 00                	add    (%eax),%al
 8048332:	04 00                	add    $0x0,%al
 8048334:	02 00                	add    (%eax),%al
 8048336:	01 00                	add    %eax,(%eax)
 8048338:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

0804833c <.gnu.version_r>:
 804833c:	01 00                	add    %eax,(%eax)
 804833e:	03 00                	add    (%eax),%eax
 8048340:	01 00                	add    %eax,(%eax)
 8048342:	00 00                	add    %al,(%eax)
 8048344:	10 00                	adc    %al,(%eax)
 8048346:	00 00                	add    %al,(%eax)
 8048348:	00 00                	add    %al,(%eax)
 804834a:	00 00                	add    %al,(%eax)
 804834c:	17                   	pop    %ss
 804834d:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%ecx),%ebp
 8048354:	7e 00                	jle    8048356 <_init-0x6e>
 8048356:	00 00                	add    %al,(%eax)
 8048358:	10 00                	adc    %al,(%eax)
 804835a:	00 00                	add    %al,(%eax)
 804835c:	14 69                	adc    $0x69,%al
 804835e:	69 0d 00 00 03 00 88 	imul   $0x88,0x30000,%ecx
 8048365:	00 00 00 
 8048368:	10 00                	adc    %al,(%eax)
 804836a:	00 00                	add    %al,(%eax)
 804836c:	10 69 69             	adc    %ch,0x69(%ecx)
 804836f:	0d 00 00 02 00       	or     $0x20000,%eax
 8048374:	92                   	xchg   %eax,%edx
 8048375:	00 00                	add    %al,(%eax)
 8048377:	00 00                	add    %al,(%eax)
 8048379:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804837c <.rel.dyn>:
 804837c:	fc                   	cld    
 804837d:	9f                   	lahf   
 804837e:	04 08                	add    $0x8,%al
 8048380:	06                   	push   %es
 8048381:	04 00                	add    $0x0,%al
 8048383:	00 40 a0             	add    %al,-0x60(%eax)
 8048386:	04 08                	add    $0x8,%al
 8048388:	05 0a 00 00 44       	add    $0x4400000a,%eax
 804838d:	a0 04 08 05 08       	mov    0x8050804,%al
	...

Disassembly of section .rel.plt:

08048394 <.rel.plt>:
 8048394:	0c a0                	or     $0xa0,%al
 8048396:	04 08                	add    $0x8,%al
 8048398:	07                   	pop    %es
 8048399:	01 00                	add    %eax,(%eax)
 804839b:	00 10                	add    %dl,(%eax)
 804839d:	a0 04 08 07 02       	mov    0x2070804,%al
 80483a2:	00 00                	add    %al,(%eax)
 80483a4:	14 a0                	adc    $0xa0,%al
 80483a6:	04 08                	add    $0x8,%al
 80483a8:	07                   	pop    %es
 80483a9:	03 00                	add    (%eax),%eax
 80483ab:	00 18                	add    %bl,(%eax)
 80483ad:	a0 04 08 07 05       	mov    0x5070804,%al
 80483b2:	00 00                	add    %al,(%eax)
 80483b4:	1c a0                	sbb    $0xa0,%al
 80483b6:	04 08                	add    $0x8,%al
 80483b8:	07                   	pop    %es
 80483b9:	06                   	push   %es
 80483ba:	00 00                	add    %al,(%eax)
 80483bc:	20 a0 04 08 07 07    	and    %ah,0x7070804(%eax)
	...

Disassembly of section .init:

080483c4 <_init>:
 80483c4:	53                   	push   %ebx
 80483c5:	83 ec 08             	sub    $0x8,%esp
 80483c8:	e8 d3 00 00 00       	call   80484a0 <__x86.get_pc_thunk.bx>
 80483cd:	81 c3 33 1c 00 00    	add    $0x1c33,%ebx
 80483d3:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80483d9:	85 c0                	test   %eax,%eax
 80483db:	74 05                	je     80483e2 <_init+0x1e>
 80483dd:	e8 7e 00 00 00       	call   8048460 <__isoc99_scanf@plt+0x10>
 80483e2:	83 c4 08             	add    $0x8,%esp
 80483e5:	5b                   	pop    %ebx
 80483e6:	c3                   	ret    

Disassembly of section .plt:

080483f0 <printf@plt-0x10>:
 80483f0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483f6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483fc:	00 00                	add    %al,(%eax)
	...

08048400 <printf@plt>:
 8048400:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048406:	68 00 00 00 00       	push   $0x0
 804840b:	e9 e0 ff ff ff       	jmp    80483f0 <_init+0x2c>

08048410 <__stack_chk_fail@plt>:
 8048410:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048416:	68 08 00 00 00       	push   $0x8
 804841b:	e9 d0 ff ff ff       	jmp    80483f0 <_init+0x2c>

08048420 <system@plt>:
 8048420:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048426:	68 10 00 00 00       	push   $0x10
 804842b:	e9 c0 ff ff ff       	jmp    80483f0 <_init+0x2c>

08048430 <__libc_start_main@plt>:
 8048430:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048436:	68 18 00 00 00       	push   $0x18
 804843b:	e9 b0 ff ff ff       	jmp    80483f0 <_init+0x2c>

08048440 <setvbuf@plt>:
 8048440:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048446:	68 20 00 00 00       	push   $0x20
 804844b:	e9 a0 ff ff ff       	jmp    80483f0 <_init+0x2c>

08048450 <__isoc99_scanf@plt>:
 8048450:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048456:	68 28 00 00 00       	push   $0x28
 804845b:	e9 90 ff ff ff       	jmp    80483f0 <_init+0x2c>

Disassembly of section .plt.got:

08048460 <.plt.got>:
 8048460:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048466:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048470 <_start>:
 8048470:	31 ed                	xor    %ebp,%ebp
 8048472:	5e                   	pop    %esi
 8048473:	89 e1                	mov    %esp,%ecx
 8048475:	83 e4 f0             	and    $0xfffffff0,%esp
 8048478:	50                   	push   %eax
 8048479:	54                   	push   %esp
 804847a:	52                   	push   %edx
 804847b:	68 10 87 04 08       	push   $0x8048710
 8048480:	68 b0 86 04 08       	push   $0x80486b0
 8048485:	51                   	push   %ecx
 8048486:	56                   	push   %esi
 8048487:	68 23 86 04 08       	push   $0x8048623
 804848c:	e8 9f ff ff ff       	call   8048430 <__libc_start_main@plt>
 8048491:	f4                   	hlt    
 8048492:	66 90                	xchg   %ax,%ax
 8048494:	66 90                	xchg   %ax,%ax
 8048496:	66 90                	xchg   %ax,%ax
 8048498:	66 90                	xchg   %ax,%ax
 804849a:	66 90                	xchg   %ax,%ax
 804849c:	66 90                	xchg   %ax,%ax
 804849e:	66 90                	xchg   %ax,%ax

080484a0 <__x86.get_pc_thunk.bx>:
 80484a0:	8b 1c 24             	mov    (%esp),%ebx
 80484a3:	c3                   	ret    
 80484a4:	66 90                	xchg   %ax,%ax
 80484a6:	66 90                	xchg   %ax,%ax
 80484a8:	66 90                	xchg   %ax,%ax
 80484aa:	66 90                	xchg   %ax,%ax
 80484ac:	66 90                	xchg   %ax,%ax
 80484ae:	66 90                	xchg   %ax,%ax

080484b0 <deregister_tm_clones>:
 80484b0:	b8 2f a0 04 08       	mov    $0x804a02f,%eax
 80484b5:	2d 2c a0 04 08       	sub    $0x804a02c,%eax
 80484ba:	83 f8 06             	cmp    $0x6,%eax
 80484bd:	76 1a                	jbe    80484d9 <deregister_tm_clones+0x29>
 80484bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80484c4:	85 c0                	test   %eax,%eax
 80484c6:	74 11                	je     80484d9 <deregister_tm_clones+0x29>
 80484c8:	55                   	push   %ebp
 80484c9:	89 e5                	mov    %esp,%ebp
 80484cb:	83 ec 14             	sub    $0x14,%esp
 80484ce:	68 2c a0 04 08       	push   $0x804a02c
 80484d3:	ff d0                	call   *%eax
 80484d5:	83 c4 10             	add    $0x10,%esp
 80484d8:	c9                   	leave  
 80484d9:	f3 c3                	repz ret 
 80484db:	90                   	nop
 80484dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080484e0 <register_tm_clones>:
 80484e0:	b8 2c a0 04 08       	mov    $0x804a02c,%eax
 80484e5:	2d 2c a0 04 08       	sub    $0x804a02c,%eax
 80484ea:	c1 f8 02             	sar    $0x2,%eax
 80484ed:	89 c2                	mov    %eax,%edx
 80484ef:	c1 ea 1f             	shr    $0x1f,%edx
 80484f2:	01 d0                	add    %edx,%eax
 80484f4:	d1 f8                	sar    %eax
 80484f6:	74 1b                	je     8048513 <register_tm_clones+0x33>
 80484f8:	ba 00 00 00 00       	mov    $0x0,%edx
 80484fd:	85 d2                	test   %edx,%edx
 80484ff:	74 12                	je     8048513 <register_tm_clones+0x33>
 8048501:	55                   	push   %ebp
 8048502:	89 e5                	mov    %esp,%ebp
 8048504:	83 ec 10             	sub    $0x10,%esp
 8048507:	50                   	push   %eax
 8048508:	68 2c a0 04 08       	push   $0x804a02c
 804850d:	ff d2                	call   *%edx
 804850f:	83 c4 10             	add    $0x10,%esp
 8048512:	c9                   	leave  
 8048513:	f3 c3                	repz ret 
 8048515:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048519:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048520 <__do_global_dtors_aux>:
 8048520:	80 3d 48 a0 04 08 00 	cmpb   $0x0,0x804a048
 8048527:	75 13                	jne    804853c <__do_global_dtors_aux+0x1c>
 8048529:	55                   	push   %ebp
 804852a:	89 e5                	mov    %esp,%ebp
 804852c:	83 ec 08             	sub    $0x8,%esp
 804852f:	e8 7c ff ff ff       	call   80484b0 <deregister_tm_clones>
 8048534:	c6 05 48 a0 04 08 01 	movb   $0x1,0x804a048
 804853b:	c9                   	leave  
 804853c:	f3 c3                	repz ret 
 804853e:	66 90                	xchg   %ax,%ax

08048540 <frame_dummy>:
 8048540:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 8048545:	8b 10                	mov    (%eax),%edx
 8048547:	85 d2                	test   %edx,%edx
 8048549:	75 05                	jne    8048550 <frame_dummy+0x10>
 804854b:	eb 93                	jmp    80484e0 <register_tm_clones>
 804854d:	8d 76 00             	lea    0x0(%esi),%esi
 8048550:	ba 00 00 00 00       	mov    $0x0,%edx
 8048555:	85 d2                	test   %edx,%edx
 8048557:	74 f2                	je     804854b <frame_dummy+0xb>
 8048559:	55                   	push   %ebp
 804855a:	89 e5                	mov    %esp,%ebp
 804855c:	83 ec 14             	sub    $0x14,%esp
 804855f:	50                   	push   %eax
 8048560:	ff d2                	call   *%edx
 8048562:	83 c4 10             	add    $0x10,%esp
 8048565:	c9                   	leave  
 8048566:	e9 75 ff ff ff       	jmp    80484e0 <register_tm_clones>

0804856b <hello>:
 804856b:	55                   	push   %ebp
 804856c:	89 e5                	mov    %esp,%ebp
 804856e:	83 ec 18             	sub    $0x18,%esp
 8048571:	c7 45 f4 56 87 04 08 	movl   $0x8048756,-0xc(%ebp)
 8048578:	66 c7 45 f2 10 00    	movw   $0x10,-0xe(%ebp)
 804857e:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 8048582:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 8048586:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 804858a:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 804858e:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 8048592:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 8048596:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 804859a:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 804859e:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485a2:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485a6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485aa:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485ae:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485b2:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485b6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485ba:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485be:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485c2:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485c6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485ca:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485ce:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485d2:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485d6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485da:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485de:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485e2:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485e6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485ea:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485ee:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 80485f2:	83 ec 08             	sub    $0x8,%esp
 80485f5:	68 30 87 04 08       	push   $0x8048730
 80485fa:	68 59 87 04 08       	push   $0x8048759
 80485ff:	e8 fc fd ff ff       	call   8048400 <printf@plt>
 8048604:	83 c4 10             	add    $0x10,%esp
 8048607:	90                   	nop
 8048608:	c9                   	leave  
 8048609:	c3                   	ret    

0804860a <youcantseeme>:
 804860a:	55                   	push   %ebp
 804860b:	89 e5                	mov    %esp,%ebp
 804860d:	83 ec 08             	sub    $0x8,%esp
 8048610:	83 ec 0c             	sub    $0xc,%esp
 8048613:	68 5c 87 04 08       	push   $0x804875c
 8048618:	e8 03 fe ff ff       	call   8048420 <system@plt>
 804861d:	83 c4 10             	add    $0x10,%esp
 8048620:	90                   	nop
 8048621:	c9                   	leave  
 8048622:	c3                   	ret    

08048623 <main>:
 8048623:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048627:	83 e4 f0             	and    $0xfffffff0,%esp
 804862a:	ff 71 fc             	pushl  -0x4(%ecx)
 804862d:	55                   	push   %ebp
 804862e:	89 e5                	mov    %esp,%ebp
 8048630:	51                   	push   %ecx
 8048631:	83 ec 24             	sub    $0x24,%esp
 8048634:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804863a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804863d:	31 c0                	xor    %eax,%eax
 804863f:	a1 40 a0 04 08       	mov    0x804a040,%eax
 8048644:	6a 00                	push   $0x0
 8048646:	6a 02                	push   $0x2
 8048648:	6a 00                	push   $0x0
 804864a:	50                   	push   %eax
 804864b:	e8 f0 fd ff ff       	call   8048440 <setvbuf@plt>
 8048650:	83 c4 10             	add    $0x10,%esp
 8048653:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048658:	6a 00                	push   $0x0
 804865a:	6a 02                	push   $0x2
 804865c:	6a 00                	push   $0x0
 804865e:	50                   	push   %eax
 804865f:	e8 dc fd ff ff       	call   8048440 <setvbuf@plt>
 8048664:	83 c4 10             	add    $0x10,%esp
 8048667:	e8 ff fe ff ff       	call   804856b <hello>
 804866c:	83 ec 08             	sub    $0x8,%esp
 804866f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048672:	50                   	push   %eax
 8048673:	68 59 87 04 08       	push   $0x8048759
 8048678:	e8 d3 fd ff ff       	call   8048450 <__isoc99_scanf@plt>
 804867d:	83 c4 10             	add    $0x10,%esp
 8048680:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048683:	8b 00                	mov    (%eax),%eax
 8048685:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048688:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804868b:	ff d0                	call   *%eax
 804868d:	b8 00 00 00 00       	mov    $0x0,%eax
 8048692:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048695:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804869c:	74 05                	je     80486a3 <main+0x80>
 804869e:	e8 6d fd ff ff       	call   8048410 <__stack_chk_fail@plt>
 80486a3:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 80486a6:	c9                   	leave  
 80486a7:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80486aa:	c3                   	ret    
 80486ab:	66 90                	xchg   %ax,%ax
 80486ad:	66 90                	xchg   %ax,%ax
 80486af:	90                   	nop

080486b0 <__libc_csu_init>:
 80486b0:	55                   	push   %ebp
 80486b1:	57                   	push   %edi
 80486b2:	56                   	push   %esi
 80486b3:	53                   	push   %ebx
 80486b4:	e8 e7 fd ff ff       	call   80484a0 <__x86.get_pc_thunk.bx>
 80486b9:	81 c3 47 19 00 00    	add    $0x1947,%ebx
 80486bf:	83 ec 0c             	sub    $0xc,%esp
 80486c2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 80486c6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80486cc:	e8 f3 fc ff ff       	call   80483c4 <_init>
 80486d1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80486d7:	29 c6                	sub    %eax,%esi
 80486d9:	c1 fe 02             	sar    $0x2,%esi
 80486dc:	85 f6                	test   %esi,%esi
 80486de:	74 25                	je     8048705 <__libc_csu_init+0x55>
 80486e0:	31 ff                	xor    %edi,%edi
 80486e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80486e8:	83 ec 04             	sub    $0x4,%esp
 80486eb:	ff 74 24 2c          	pushl  0x2c(%esp)
 80486ef:	ff 74 24 2c          	pushl  0x2c(%esp)
 80486f3:	55                   	push   %ebp
 80486f4:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80486fb:	83 c7 01             	add    $0x1,%edi
 80486fe:	83 c4 10             	add    $0x10,%esp
 8048701:	39 f7                	cmp    %esi,%edi
 8048703:	75 e3                	jne    80486e8 <__libc_csu_init+0x38>
 8048705:	83 c4 0c             	add    $0xc,%esp
 8048708:	5b                   	pop    %ebx
 8048709:	5e                   	pop    %esi
 804870a:	5f                   	pop    %edi
 804870b:	5d                   	pop    %ebp
 804870c:	c3                   	ret    
 804870d:	8d 76 00             	lea    0x0(%esi),%esi

08048710 <__libc_csu_fini>:
 8048710:	f3 c3                	repz ret 

Disassembly of section .fini:

08048714 <_fini>:
 8048714:	53                   	push   %ebx
 8048715:	83 ec 08             	sub    $0x8,%esp
 8048718:	e8 83 fd ff ff       	call   80484a0 <__x86.get_pc_thunk.bx>
 804871d:	81 c3 e3 18 00 00    	add    $0x18e3,%ebx
 8048723:	83 c4 08             	add    $0x8,%esp
 8048726:	5b                   	pop    %ebx
 8048727:	c3                   	ret    

Disassembly of section .rodata:

08048728 <_fp_hw>:
 8048728:	03 00                	add    (%eax),%eax
	...

0804872c <_IO_stdin_used>:
 804872c:	01 00                	add    %eax,(%eax)
 804872e:	02 00                	add    (%eax),%al
 8048730:	57                   	push   %edi
 8048731:	65 6c                	gs insb (%dx),%es:(%edi)
 8048733:	63 6f 6d             	arpl   %bp,0x6d(%edi)
 8048736:	65 21 0a             	and    %ecx,%gs:(%edx)
 8048739:	50                   	push   %eax
 804873a:	6c                   	insb   (%dx),%es:(%edi)
 804873b:	65 61                	gs popa 
 804873d:	73 65                	jae    80487a4 <__GNU_EH_FRAME_HDR+0x44>
 804873f:	20 69 6e             	and    %ch,0x6e(%ecx)
 8048742:	70 75                	jo     80487b9 <__GNU_EH_FRAME_HDR+0x59>
 8048744:	74 20                	je     8048766 <__GNU_EH_FRAME_HDR+0x6>
 8048746:	74 68                	je     80487b0 <__GNU_EH_FRAME_HDR+0x50>
 8048748:	65 20 6d 61          	and    %ch,%gs:0x61(%ebp)
 804874c:	67 69 63 20 73 74 72 	imul   $0x69727473,0x20(%bp,%di),%esp
 8048753:	69 
 8048754:	6e                   	outsb  %ds:(%esi),(%dx)
 8048755:	67 3a 20             	cmp    (%bx,%si),%ah
 8048758:	00 25 73 00 73 68    	add    %ah,0x68730073
	...

Disassembly of section .eh_frame_hdr:

08048760 <__GNU_EH_FRAME_HDR>:
 8048760:	01 1b                	add    %ebx,(%ebx)
 8048762:	03 3b                	add    (%ebx),%edi
 8048764:	38 00                	cmp    %al,(%eax)
 8048766:	00 00                	add    %al,(%eax)
 8048768:	06                   	push   %es
 8048769:	00 00                	add    %al,(%eax)
 804876b:	00 90 fc ff ff 54    	add    %dl,0x54fffffc(%eax)
 8048771:	00 00                	add    %al,(%eax)
 8048773:	00 0b                	add    %cl,(%ebx)
 8048775:	fe                   	(bad)  
 8048776:	ff                   	(bad)  
 8048777:	ff                   	(bad)  
 8048778:	78 00                	js     804877a <__GNU_EH_FRAME_HDR+0x1a>
 804877a:	00 00                	add    %al,(%eax)
 804877c:	aa                   	stos   %al,%es:(%edi)
 804877d:	fe                   	(bad)  
 804877e:	ff                   	(bad)  
 804877f:	ff 98 00 00 00 c3    	lcall  *-0x3d000000(%eax)
 8048785:	fe                   	(bad)  
 8048786:	ff                   	(bad)  
 8048787:	ff                   	(bad)  
 8048788:	b8 00 00 00 50       	mov    $0x50000000,%eax
 804878d:	ff                   	(bad)  
 804878e:	ff                   	(bad)  
 804878f:	ff e4                	jmp    *%esp
 8048791:	00 00                	add    %al,(%eax)
 8048793:	00 b0 ff ff ff 30    	add    %dh,0x30ffffff(%eax)
 8048799:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .eh_frame:

0804879c <__FRAME_END__-0x108>:
 804879c:	14 00                	adc    $0x0,%al
 804879e:	00 00                	add    %al,(%eax)
 80487a0:	00 00                	add    %al,(%eax)
 80487a2:	00 00                	add    %al,(%eax)
 80487a4:	01 7a 52             	add    %edi,0x52(%edx)
 80487a7:	00 01                	add    %al,(%ecx)
 80487a9:	7c 08                	jl     80487b3 <__GNU_EH_FRAME_HDR+0x53>
 80487ab:	01 1b                	add    %ebx,(%ebx)
 80487ad:	0c 04                	or     $0x4,%al
 80487af:	04 88                	add    $0x88,%al
 80487b1:	01 00                	add    %eax,(%eax)
 80487b3:	00 20                	add    %ah,(%eax)
 80487b5:	00 00                	add    %al,(%eax)
 80487b7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80487ba:	00 00                	add    %al,(%eax)
 80487bc:	34 fc                	xor    $0xfc,%al
 80487be:	ff                   	(bad)  
 80487bf:	ff 70 00             	pushl  0x0(%eax)
 80487c2:	00 00                	add    %al,(%eax)
 80487c4:	00 0e                	add    %cl,(%esi)
 80487c6:	08 46 0e             	or     %al,0xe(%esi)
 80487c9:	0c 4a                	or     $0x4a,%al
 80487cb:	0f 0b                	ud2    
 80487cd:	74 04                	je     80487d3 <__GNU_EH_FRAME_HDR+0x73>
 80487cf:	78 00                	js     80487d1 <__GNU_EH_FRAME_HDR+0x71>
 80487d1:	3f                   	aas    
 80487d2:	1a 3b                	sbb    (%ebx),%bh
 80487d4:	2a 32                	sub    (%edx),%dh
 80487d6:	24 22                	and    $0x22,%al
 80487d8:	1c 00                	sbb    $0x0,%al
 80487da:	00 00                	add    %al,(%eax)
 80487dc:	40                   	inc    %eax
 80487dd:	00 00                	add    %al,(%eax)
 80487df:	00 8b fd ff ff 9f    	add    %cl,-0x60000003(%ebx)
 80487e5:	00 00                	add    %al,(%eax)
 80487e7:	00 00                	add    %al,(%eax)
 80487e9:	41                   	inc    %ecx
 80487ea:	0e                   	push   %cs
 80487eb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80487f1:	02 9b c5 0c 04 04    	add    0x4040cc5(%ebx),%bl
 80487f7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80487fa:	00 00                	add    %al,(%eax)
 80487fc:	60                   	pusha  
 80487fd:	00 00                	add    %al,(%eax)
 80487ff:	00 0a                	add    %cl,(%edx)
 8048801:	fe                   	(bad)  
 8048802:	ff                   	(bad)  
 8048803:	ff 19                	lcall  *(%ecx)
 8048805:	00 00                	add    %al,(%eax)
 8048807:	00 00                	add    %al,(%eax)
 8048809:	41                   	inc    %ecx
 804880a:	0e                   	push   %cs
 804880b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048811:	55                   	push   %ebp
 8048812:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048815:	04 00                	add    $0x0,%al
 8048817:	00 28                	add    %ch,(%eax)
 8048819:	00 00                	add    %al,(%eax)
 804881b:	00 80 00 00 00 03    	add    %al,0x3000000(%eax)
 8048821:	fe                   	(bad)  
 8048822:	ff                   	(bad)  
 8048823:	ff 88 00 00 00 00    	decl   0x0(%eax)
 8048829:	44                   	inc    %esp
 804882a:	0c 01                	or     $0x1,%al
 804882c:	00 47 10             	add    %al,0x10(%edi)
 804882f:	05 02 75 00 43       	add    $0x43007502,%eax
 8048834:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 8048838:	06                   	push   %es
 8048839:	02 75 0c             	add    0xc(%ebp),%dh
 804883c:	01 00                	add    %eax,(%eax)
 804883e:	41                   	inc    %ecx
 804883f:	c5 43 0c             	lds    0xc(%ebx),%eax
 8048842:	04 04                	add    $0x4,%al
 8048844:	48                   	dec    %eax
 8048845:	00 00                	add    %al,(%eax)
 8048847:	00 ac 00 00 00 64 fe 	add    %ch,-0x19c0000(%eax,%eax,1)
 804884e:	ff                   	(bad)  
 804884f:	ff 5d 00             	lcall  *0x0(%ebp)
 8048852:	00 00                	add    %al,(%eax)
 8048854:	00 41 0e             	add    %al,0xe(%ecx)
 8048857:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804885d:	87 03                	xchg   %eax,(%ebx)
 804885f:	41                   	inc    %ecx
 8048860:	0e                   	push   %cs
 8048861:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048867:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 804886e:	24 44                	and    $0x44,%al
 8048870:	0e                   	push   %cs
 8048871:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048875:	41                   	inc    %ecx
 8048876:	0e                   	push   %cs
 8048877:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804887a:	20 47 0e             	and    %al,0xe(%edi)
 804887d:	14 41                	adc    $0x41,%al
 804887f:	c3                   	ret    
 8048880:	0e                   	push   %cs
 8048881:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048884:	0e                   	push   %cs
 8048885:	0c 41                	or     $0x41,%al
 8048887:	c7                   	(bad)  
 8048888:	0e                   	push   %cs
 8048889:	08 41 c5             	or     %al,-0x3b(%ecx)
 804888c:	0e                   	push   %cs
 804888d:	04 00                	add    $0x0,%al
 804888f:	00 10                	add    %dl,(%eax)
 8048891:	00 00                	add    %al,(%eax)
 8048893:	00 f8                	add    %bh,%al
 8048895:	00 00                	add    %al,(%eax)
 8048897:	00 78 fe             	add    %bh,-0x2(%eax)
 804889a:	ff                   	(bad)  
 804889b:	ff 02                	incl   (%edx)
 804889d:	00 00                	add    %al,(%eax)
 804889f:	00 00                	add    %al,(%eax)
 80488a1:	00 00                	add    %al,(%eax)
	...

080488a4 <__FRAME_END__>:
 80488a4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	40                   	inc    %eax
 8049f09:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	20                   	.byte 0x20
 8049f0d:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	c4 83 04 08 0d 00    	les    0xd0804(%ebx),%eax
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	14 87                	adc    $0x87,%al
 8049f2a:	04 08                	add    $0x8,%al
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	88 82 04 08 06 00    	mov    %al,0x60804(%edx)
 8049f5e:	00 00                	add    %al,(%eax)
 8049f60:	d8 81 04 08 0a 00    	fadds  0xa0804(%ecx)
 8049f66:	00 00                	add    %al,(%eax)
 8049f68:	9c                   	pushf  
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	30 00                	xor    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 94 83 04 08 11 00 	add    %dl,0x110804(%ebx,%eax,4)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	7c 83                	jl     8049f25 <_DYNAMIC+0x11>
 8049fa2:	04 08                	add    $0x8,%al
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	18 00                	sbb    %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 3c             	ljmp   *0x3c(%edi)
 8049fb9:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 24             	ljmp   *0x24(%edi)
 8049fc9:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	06                   	push   %es
 804a00d:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a010:	16                   	push   %ss
 804a011:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a014:	26 84 04 08          	test   %al,%es:(%eax,%ecx,1)
 804a018:	36 84 04 08          	test   %al,%ss:(%eax,%ecx,1)
 804a01c:	46                   	inc    %esi
 804a01d:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a020:	56                   	push   %esi
 804a021:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .data:

0804a024 <__data_start>:
 804a024:	00 00                	add    %al,(%eax)
	...

0804a028 <__dso_handle>:
 804a028:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a040 <stdin@@GLIBC_2.0>:
 804a040:	00 00                	add    %al,(%eax)
	...

0804a044 <stdout@@GLIBC_2.0>:
 804a044:	00 00                	add    %al,(%eax)
	...

0804a048 <completed.7200>:
 804a048:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804834c>
   a:	74 75                	je     81 <_init-0x8048343>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x8048335>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%esi,%ebp,1)
  22:	34 29                	xor    $0x29,%al
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  2a:	20 32                	and    %dh,(%edx)
  2c:	30 31                	xor    %dh,(%ecx)
  2e:	36 30 36             	xor    %dh,%ss:(%esi)
  31:	30 39                	xor    %bh,(%ecx)
	...
